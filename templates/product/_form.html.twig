{{ form_start(form, {'attr': {'class': 'space-y-4'}}) }}

<div class="relative z-0 w-full mb-5 group">
    {{ form_widget(form.name, {'attr': {'class': 'peer block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600'}}) }}
    <label for="{{ form.name.vars.id }}"
           class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Nom
        du produit</label>

    {% if form_errors(form.name) %}
        <div class="text-red-500 text-xs italic">
            {{ form_errors(form.name) }}
        </div>
    {% endif %}
</div>

<div class="relative z-0 w-full mb-5 group">
    {{ form_widget(form.description, {'attr': {'class': 'peer block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600'}}) }}
    <label for="{{ form.description.vars.id }}"
           class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Description</label>

    {% if form_errors(form.description) %}
        <div class="text-red-500 text-xs italic">
            {{ form_errors(form.description) }}
        </div>
    {% endif %}
</div>

<div class="relative z-0 w-full mb-5 group">
    {{ form_widget(form.price, {'attr': {'class': 'peer block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600'}}) }}
    <label for="{{ form.price.vars.id }}"
           class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Prix
        (€)</label>

    {% if form_errors(form.price) %}
        <div class="text-red-500 text-xs italic">
            {{ form_errors(form.price) }}
        </div>
    {% endif %}
</div>

<div class="relative z-0 w-full mb-5 group">
    {{ form_widget(form.stockQuantity, {'attr': {'class': 'peer block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600'}}) }}
    <label for="{{ form.stockQuantity.vars.id }}"
           class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Quantité
        en stock</label>

    {% if form_errors(form.stockQuantity) %}
        <div class="text-red-500 text-xs italic">
            {{ form_errors(form.stockQuantity) }}
        </div>
    {% endif %}

</div>

<div class="relative z-0 w-full mb-5 group">
    {{ form_widget(form.size, {'attr': {'class': 'peer block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 focus:outline-none focus:ring-0 focus:border-blue-600'}}) }}
    <label for="{{ form.size.vars.id }}"
           class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Taille</label>

    {% if form_errors(form.size) %}
        <div class="text-red-500 text-xs italic">
            {{ form_errors(form.size) }}
        </div>
    {% endif %}
</div>

<div class="relative z-0 w-full mb-5 group">
    {{ form_widget(form.category, {'attr': {'class': 'peer block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 focus:outline-none focus:ring-0 focus:border-blue-600'}}) }}
    <label for="{{ form.category.vars.id }}"
           class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Catégorie</label>

    {% if form_errors(form.category) %}
        <div class="text-red-500 text-xs italic">
            {{ form_errors(form.category) }}
        </div>
    {% endif %}
</div>

<div class="row js-genus-scientist-wrapper flex flex-wrap gap-4 mb-2"
     data-prototype="{{ form_widget(form.imageProducts.vars.prototype)|e('html_attr') }}"
     data-index="{{ form.imageProducts|length }}"
>
    <div class="flex flex-wrap gap-4 mb-2">
        {% for imageProductForm in form.imageProducts %}
            <div class="js-genus-scientist-item flex flex-col gap-2">
                {{ form_errors(imageProductForm) }}
                {% if imageProductForm.url.vars.value is not empty %}
                    <div class="w-fit flex flex-col gap-2">
                        <div class="relative inline-block">
                            <a href="#" class="absolute right-0 z-10">
                                <svg class="js-remove-scientist w-6 h-6" viewBox="0 0 24 24" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round"
                                       stroke-linejoin="round"></g>
                                    <g id="SVGRepo_iconCarrier">
                                        <path d="M8.00191 9.41621C7.61138 9.02569 7.61138 8.39252 8.00191 8.002C8.39243 7.61147 9.0256 7.61147 9.41612 8.002L12.0057 10.5916L14.5896 8.00771C14.9801 7.61719 15.6133 7.61719 16.0038 8.00771C16.3943 8.39824 16.3943 9.0314 16.0038 9.42193L13.4199 12.0058L16.0039 14.5897C16.3944 14.9803 16.3944 15.6134 16.0039 16.004C15.6133 16.3945 14.9802 16.3945 14.5896 16.004L12.0057 13.42L9.42192 16.0038C9.03139 16.3943 8.39823 16.3943 8.00771 16.0038C7.61718 15.6133 7.61718 14.9801 8.00771 14.5896L10.5915 12.0058L8.00191 9.41621Z"
                                              fill="white"></path>
                                        <path fill-rule="evenodd" clip-rule="evenodd"
                                              d="M23 4C23 2.34315 21.6569 1 20 1H4C2.34315 1 1 2.34315 1 4V20C1 21.6569 2.34315 23 4 23H20C21.6569 23 23 21.6569 23 20V4ZM21 4C21 3.44772 20.5523 3 20 3H4C3.44772 3 3 3.44772 3 4V20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20V4Z"
                                              fill="white"></path>
                                    </g>
                                </svg>
                            </a>
                            <img class="image-preview h-24 w-24"
                                 src="{{ asset('img/products/') ~ imageProductForm.url.vars.value }}"
                                 alt="Image">
                        </div>
                    </div>
                {% endif %}
                {{ form_widget(imageProductForm.image, {'attr': {'class' : 'w-[100px]'}}) }}
                {% if form_errors(imageProductForm.image) %}
                    <div class="text-red-500 text-xs italic">
                        {{ form_errors(imageProductForm.image) }}
                    </div>
                {% endif %}
            </div>
        {% endfor %}
    </div>
</div>

<button type="button"
        class="js-genus-scientist-add flex items-center gap-2 bg-black hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
    <svg width="16px" height="16px" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
         fill="#ffffff">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
        <g id="SVGRepo_iconCarrier"><title>plus-square</title>
            <desc>Created with Sketch Beta.</desc>
            <defs></defs>
            <g id="Page-1" stroke="none" stroke-width="1" fill="white" fill-rule="evenodd" sketch:type="MSPage">
                <g id="Icon-Set" sketch:type="MSLayerGroup" transform="translate(-100.000000, -1035.000000)"
                   fill="#ffffff">
                    <path d="M130,1063 C130,1064.1 129.104,1065 128,1065 L104,1065 C102.896,1065 102,1064.1 102,1063 L102,1039 C102,1037.9 102.896,1037 104,1037 L128,1037 C129.104,1037 130,1037.9 130,1039 L130,1063 L130,1063 Z M128,1035 L104,1035 C101.791,1035 100,1036.79 100,1039 L100,1063 C100,1065.21 101.791,1067 104,1067 L128,1067 C130.209,1067 132,1065.21 132,1063 L132,1039 C132,1036.79 130.209,1035 128,1035 L128,1035 Z M122,1050 L117,1050 L117,1045 C117,1044.45 116.552,1044 116,1044 C115.448,1044 115,1044.45 115,1045 L115,1050 L110,1050 C109.448,1050 109,1050.45 109,1051 C109,1051.55 109.448,1052 110,1052 L115,1052 L115,1057 C115,1057.55 115.448,1058 116,1058 C116.552,1058 117,1057.55 117,1057 L117,1052 L122,1052 C122.552,1052 123,1051.55 123,1051 C123,1050.45 122.552,1050 122,1050 L122,1050 Z"
                          id="plus-square" sketch:type="MSShapeGroup"></path>
                </g>
            </g>
        </g>
    </svg>
    Ajouter une image
</button>

<div class="flex space-x-4 text-center">
    <a class="flex-1 bg-black hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300"
       href="{{ path('app_product_index') }}">Revenir</a>

    <button type="submit"
            class="flex-1 bg-black hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
        Ajouter le produit
    </button>
</div>
{{ form_end(form) }}


{% block javascripts %}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const wrapper = document.querySelector(".js-genus-scientist-wrapper");
            const addButton = document.querySelector(".js-genus-scientist-add");
            const deleteButtons = document.querySelectorAll(".js-remove-scientist");

            if (!wrapper) return; // Sécurité si l'élément n'existe pas

            function createImagePreview(input) {
                const file = input.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        let parent = input.parentElement;
                        if (!parent) return; // Sécurité si l'élément parent n'existe pas

                        // Ajouter la classe 'relative' au parent pour que le bouton de suppression se positionne relativement à lui
                        parent.classList.add("relative");

                        let preview = parent.querySelector(".image-preview");

                        // Si la preview n'existe pas, on la crée
                        if (!preview) {
                            preview = document.createElement("img");
                            preview.classList.add("image-preview", "h-24", "w-24", "mb-2", 'relative');
                            parent.prepend(preview);
                        }

                        // Mettre à jour l'image affichée
                        preview.src = e.target.result;

                        // Ajouter le bouton de suppression avec l'icône SVG
                        let deleteButton = parent.querySelector(".js-remove-scientist");
                        if (!deleteButton) {
                            deleteButton = document.createElement("a");
                            deleteButton.href = "#";
                            deleteButton.classList.add("absolute", "top-0", "right-1", "z-10", "cursor-pointer");

                            // Ajouter l'icône SVG
                            deleteButton.innerHTML = `
                    <svg class="js-remove-scientist w-6 h-6" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                        <g id="SVGRepo_iconCarrier">
                            <path d="M8.00191 9.41621C7.61138 9.02569 7.61138 8.39252 8.00191 8.002C8.39243 7.61147 9.0256 7.61147 9.41612 8.002L12.0057 10.5916L14.5896 8.00771C14.9801 7.61719 15.6133 7.61719 16.0038 8.00771C16.3943 8.39824 16.3943 9.0314 16.0038 9.42193L13.4199 12.0058L16.0039 14.5897C16.3944 14.9803 16.3944 15.6134 16.0039 16.004C15.6133 16.3945 14.9802 16.3945 14.5896 16.004L12.0057 13.42L9.42192 16.0038C9.03139 16.3943 8.39823 16.3943 8.00771 16.0038C7.61718 15.6133 7.61718 14.9801 8.00771 14.5896L10.5915 12.0058L8.00191 9.41621Z" fill="white"></path>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M23 4C23 2.34315 21.6569 1 20 1H4C2.34315 1 1 2.34315 1 4V20C1 21.6569 2.34315 23 4 23H20C21.6569 23 23 21.6569 23 20V4ZM21 4C21 3.44772 20.5523 3 20 3H4C3.44772 3 3 3.44772 3 4V20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20V4Z" fill="white"></path>
                        </g>
                    </svg>
                `;

                            // Ajouter le bouton de suppression à l'élément parent
                            parent.appendChild(deleteButton);

                            // Ajouter l'événement de suppression au bouton
                            deleteButton.addEventListener("click", function (event) {
                                event.preventDefault(); // Empêcher le comportement par défaut de l'élément <a>

                                // Supprimer l'élément d'image et le bouton
                                preview.remove();
                                deleteButton.remove();

                                // Réinitialiser le champ input
                                input.value = "";
                            });
                        }
                    };
                    reader.readAsDataURL(file);
                }
            }

            // Appliquer la prévisualisation sur les fichiers déjà présents
            document.querySelectorAll("input[type='file']").forEach(input => {
                input.addEventListener("change", function () {
                    createImagePreview(this);
                });
            });

            // Suppression d'un élément
            deleteButtons.forEach(button => {
                button.addEventListener("click", function (event) {
                    event.preventDefault();
                    const item = event.target.closest(".js-genus-scientist-item");
                    if (item) {
                        item.style.transition = "opacity 0.3s";
                        item.style.opacity = "0";
                        setTimeout(() => item.remove(), 300);
                    }
                });
            });

            addButton.addEventListener("click", function (event) {
                // Ajout d'un nouvel élément
                event.preventDefault();
                const prototype = wrapper.getAttribute("data-prototype");
                let index = parseInt(wrapper.getAttribute("data-index"), 10) || 0;

                if (!prototype) return;

                // Remplace '__name__' par l'index actuel
                const newForm = prototype.replace(/__name__/g, index);
                wrapper.setAttribute("data-index", index + 1);

                // Créer un nouvel élément
                const newElement = document.createElement("div");
                newElement.innerHTML = newForm;

                // Insérer le nouveau formulaire après le dernier enfant du wrapper
                wrapper.appendChild(newElement.firstChild);

                // Ajouter un event listener sur le nouvel input file
                const newInput = document.querySelector(`#product_imageProducts_${index}_image`);
                if (newInput) {
                    newInput.addEventListener("change", function () {
                        createImagePreview(this);
                    });
                }
            })
        })
    </script>

{% endblock %}
